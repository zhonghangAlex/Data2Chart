{"version":3,"file":"AntdIcon-8a85f685.js","sources":["../../node_modules/.pnpm/@ctrl+tinycolor@3.4.0/node_modules/@ctrl/tinycolor/dist/module/util.js","../../node_modules/.pnpm/@ctrl+tinycolor@3.4.0/node_modules/@ctrl/tinycolor/dist/module/conversion.js","../../node_modules/.pnpm/@ctrl+tinycolor@3.4.0/node_modules/@ctrl/tinycolor/dist/module/css-color-names.js","../../node_modules/.pnpm/@ctrl+tinycolor@3.4.0/node_modules/@ctrl/tinycolor/dist/module/format-input.js","../../node_modules/.pnpm/@ctrl+tinycolor@3.4.0/node_modules/@ctrl/tinycolor/dist/module/index.js","../../node_modules/.pnpm/@ant-design+colors@5.1.1/node_modules/@ant-design/colors/dist/index.esm.js","../../node_modules/.pnpm/@ant-design+icons-vue@6.0.1_vue@3.2.27/node_modules/@ant-design/icons-vue/es/insert-css.js","../../node_modules/.pnpm/@ant-design+icons-vue@6.0.1_vue@3.2.27/node_modules/@ant-design/icons-vue/es/utils.js","../../node_modules/.pnpm/@ant-design+icons-vue@6.0.1_vue@3.2.27/node_modules/@ant-design/icons-vue/es/components/IconBase.js","../../node_modules/.pnpm/@ant-design+icons-vue@6.0.1_vue@3.2.27/node_modules/@ant-design/icons-vue/es/components/twoTonePrimaryColor.js","../../node_modules/.pnpm/@ant-design+icons-vue@6.0.1_vue@3.2.27/node_modules/@ant-design/icons-vue/es/components/AntdIcon.js"],"sourcesContent":["/**\n * Take input from [0, n] and return it as [0, 1]\n * @hidden\n */\nexport function bound01(n, max) {\n    if (isOnePointZero(n)) {\n        n = '100%';\n    }\n    var isPercent = isPercentage(n);\n    n = max === 360 ? n : Math.min(max, Math.max(0, parseFloat(n)));\n    // Automatically convert percentage into number\n    if (isPercent) {\n        n = parseInt(String(n * max), 10) / 100;\n    }\n    // Handle floating point rounding errors\n    if (Math.abs(n - max) < 0.000001) {\n        return 1;\n    }\n    // Convert into [0, 1] range if it isn't already\n    if (max === 360) {\n        // If n is a hue given in degrees,\n        // wrap around out-of-range values into [0, 360] range\n        // then convert into [0, 1].\n        n = (n < 0 ? (n % max) + max : n % max) / parseFloat(String(max));\n    }\n    else {\n        // If n not a hue given in degrees\n        // Convert into [0, 1] range if it isn't already.\n        n = (n % max) / parseFloat(String(max));\n    }\n    return n;\n}\n/**\n * Force a number between 0 and 1\n * @hidden\n */\nexport function clamp01(val) {\n    return Math.min(1, Math.max(0, val));\n}\n/**\n * Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n * <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\n * @hidden\n */\nexport function isOnePointZero(n) {\n    return typeof n === 'string' && n.indexOf('.') !== -1 && parseFloat(n) === 1;\n}\n/**\n * Check to see if string passed in is a percentage\n * @hidden\n */\nexport function isPercentage(n) {\n    return typeof n === 'string' && n.indexOf('%') !== -1;\n}\n/**\n * Return a valid alpha value [0,1] with all invalid values being set to 1\n * @hidden\n */\nexport function boundAlpha(a) {\n    a = parseFloat(a);\n    if (isNaN(a) || a < 0 || a > 1) {\n        a = 1;\n    }\n    return a;\n}\n/**\n * Replace a decimal with it's percentage value\n * @hidden\n */\nexport function convertToPercentage(n) {\n    if (n <= 1) {\n        return Number(n) * 100 + \"%\";\n    }\n    return n;\n}\n/**\n * Force a hex value to have 2 characters\n * @hidden\n */\nexport function pad2(c) {\n    return c.length === 1 ? '0' + c : String(c);\n}\n","import { bound01, pad2 } from './util';\n// `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\n// <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\n/**\n * Handle bounds / percentage checking to conform to CSS color spec\n * <http://www.w3.org/TR/css3-color/>\n * *Assumes:* r, g, b in [0, 255] or [0, 1]\n * *Returns:* { r, g, b } in [0, 255]\n */\nexport function rgbToRgb(r, g, b) {\n    return {\n        r: bound01(r, 255) * 255,\n        g: bound01(g, 255) * 255,\n        b: bound01(b, 255) * 255,\n    };\n}\n/**\n * Converts an RGB color value to HSL.\n * *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\n * *Returns:* { h, s, l } in [0,1]\n */\nexport function rgbToHsl(r, g, b) {\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n    var max = Math.max(r, g, b);\n    var min = Math.min(r, g, b);\n    var h = 0;\n    var s = 0;\n    var l = (max + min) / 2;\n    if (max === min) {\n        s = 0;\n        h = 0; // achromatic\n    }\n    else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n            case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / d + 2;\n                break;\n            case b:\n                h = (r - g) / d + 4;\n                break;\n            default:\n                break;\n        }\n        h /= 6;\n    }\n    return { h: h, s: s, l: l };\n}\nfunction hue2rgb(p, q, t) {\n    if (t < 0) {\n        t += 1;\n    }\n    if (t > 1) {\n        t -= 1;\n    }\n    if (t < 1 / 6) {\n        return p + (q - p) * (6 * t);\n    }\n    if (t < 1 / 2) {\n        return q;\n    }\n    if (t < 2 / 3) {\n        return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n}\n/**\n * Converts an HSL color value to RGB.\n *\n * *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\n * *Returns:* { r, g, b } in the set [0, 255]\n */\nexport function hslToRgb(h, s, l) {\n    var r;\n    var g;\n    var b;\n    h = bound01(h, 360);\n    s = bound01(s, 100);\n    l = bound01(l, 100);\n    if (s === 0) {\n        // achromatic\n        g = l;\n        b = l;\n        r = l;\n    }\n    else {\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        var p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n    }\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n/**\n * Converts an RGB color value to HSV\n *\n * *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n * *Returns:* { h, s, v } in [0,1]\n */\nexport function rgbToHsv(r, g, b) {\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n    var max = Math.max(r, g, b);\n    var min = Math.min(r, g, b);\n    var h = 0;\n    var v = max;\n    var d = max - min;\n    var s = max === 0 ? 0 : d / max;\n    if (max === min) {\n        h = 0; // achromatic\n    }\n    else {\n        switch (max) {\n            case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / d + 2;\n                break;\n            case b:\n                h = (r - g) / d + 4;\n                break;\n            default:\n                break;\n        }\n        h /= 6;\n    }\n    return { h: h, s: s, v: v };\n}\n/**\n * Converts an HSV color value to RGB.\n *\n * *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n * *Returns:* { r, g, b } in the set [0, 255]\n */\nexport function hsvToRgb(h, s, v) {\n    h = bound01(h, 360) * 6;\n    s = bound01(s, 100);\n    v = bound01(v, 100);\n    var i = Math.floor(h);\n    var f = h - i;\n    var p = v * (1 - s);\n    var q = v * (1 - f * s);\n    var t = v * (1 - (1 - f) * s);\n    var mod = i % 6;\n    var r = [v, q, p, p, t, v][mod];\n    var g = [t, v, v, q, p, p][mod];\n    var b = [p, p, t, v, v, q][mod];\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n/**\n * Converts an RGB color to hex\n *\n * Assumes r, g, and b are contained in the set [0, 255]\n * Returns a 3 or 6 character hex\n */\nexport function rgbToHex(r, g, b, allow3Char) {\n    var hex = [\n        pad2(Math.round(r).toString(16)),\n        pad2(Math.round(g).toString(16)),\n        pad2(Math.round(b).toString(16)),\n    ];\n    // Return a 3 character hex if possible\n    if (allow3Char &&\n        hex[0].startsWith(hex[0].charAt(1)) &&\n        hex[1].startsWith(hex[1].charAt(1)) &&\n        hex[2].startsWith(hex[2].charAt(1))) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\n    }\n    return hex.join('');\n}\n/**\n * Converts an RGBA color plus alpha transparency to hex\n *\n * Assumes r, g, b are contained in the set [0, 255] and\n * a in [0, 1]. Returns a 4 or 8 character rgba hex\n */\n// eslint-disable-next-line max-params\nexport function rgbaToHex(r, g, b, a, allow4Char) {\n    var hex = [\n        pad2(Math.round(r).toString(16)),\n        pad2(Math.round(g).toString(16)),\n        pad2(Math.round(b).toString(16)),\n        pad2(convertDecimalToHex(a)),\n    ];\n    // Return a 4 character hex if possible\n    if (allow4Char &&\n        hex[0].startsWith(hex[0].charAt(1)) &&\n        hex[1].startsWith(hex[1].charAt(1)) &&\n        hex[2].startsWith(hex[2].charAt(1)) &&\n        hex[3].startsWith(hex[3].charAt(1))) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);\n    }\n    return hex.join('');\n}\n/**\n * Converts an RGBA color to an ARGB Hex8 string\n * Rarely used, but required for \"toFilter()\"\n */\nexport function rgbaToArgbHex(r, g, b, a) {\n    var hex = [\n        pad2(convertDecimalToHex(a)),\n        pad2(Math.round(r).toString(16)),\n        pad2(Math.round(g).toString(16)),\n        pad2(Math.round(b).toString(16)),\n    ];\n    return hex.join('');\n}\n/** Converts a decimal to a hex value */\nexport function convertDecimalToHex(d) {\n    return Math.round(parseFloat(d) * 255).toString(16);\n}\n/** Converts a hex value to a decimal */\nexport function convertHexToDecimal(h) {\n    return parseIntFromHex(h) / 255;\n}\n/** Parse a base-16 hex value into a base-10 integer */\nexport function parseIntFromHex(val) {\n    return parseInt(val, 16);\n}\nexport function numberInputToObject(color) {\n    return {\n        r: color >> 16,\n        g: (color & 0xff00) >> 8,\n        b: color & 0xff,\n    };\n}\n","// https://github.com/bahamas10/css-color-names/blob/master/css-color-names.json\n/**\n * @hidden\n */\nexport var names = {\n    aliceblue: '#f0f8ff',\n    antiquewhite: '#faebd7',\n    aqua: '#00ffff',\n    aquamarine: '#7fffd4',\n    azure: '#f0ffff',\n    beige: '#f5f5dc',\n    bisque: '#ffe4c4',\n    black: '#000000',\n    blanchedalmond: '#ffebcd',\n    blue: '#0000ff',\n    blueviolet: '#8a2be2',\n    brown: '#a52a2a',\n    burlywood: '#deb887',\n    cadetblue: '#5f9ea0',\n    chartreuse: '#7fff00',\n    chocolate: '#d2691e',\n    coral: '#ff7f50',\n    cornflowerblue: '#6495ed',\n    cornsilk: '#fff8dc',\n    crimson: '#dc143c',\n    cyan: '#00ffff',\n    darkblue: '#00008b',\n    darkcyan: '#008b8b',\n    darkgoldenrod: '#b8860b',\n    darkgray: '#a9a9a9',\n    darkgreen: '#006400',\n    darkgrey: '#a9a9a9',\n    darkkhaki: '#bdb76b',\n    darkmagenta: '#8b008b',\n    darkolivegreen: '#556b2f',\n    darkorange: '#ff8c00',\n    darkorchid: '#9932cc',\n    darkred: '#8b0000',\n    darksalmon: '#e9967a',\n    darkseagreen: '#8fbc8f',\n    darkslateblue: '#483d8b',\n    darkslategray: '#2f4f4f',\n    darkslategrey: '#2f4f4f',\n    darkturquoise: '#00ced1',\n    darkviolet: '#9400d3',\n    deeppink: '#ff1493',\n    deepskyblue: '#00bfff',\n    dimgray: '#696969',\n    dimgrey: '#696969',\n    dodgerblue: '#1e90ff',\n    firebrick: '#b22222',\n    floralwhite: '#fffaf0',\n    forestgreen: '#228b22',\n    fuchsia: '#ff00ff',\n    gainsboro: '#dcdcdc',\n    ghostwhite: '#f8f8ff',\n    goldenrod: '#daa520',\n    gold: '#ffd700',\n    gray: '#808080',\n    green: '#008000',\n    greenyellow: '#adff2f',\n    grey: '#808080',\n    honeydew: '#f0fff0',\n    hotpink: '#ff69b4',\n    indianred: '#cd5c5c',\n    indigo: '#4b0082',\n    ivory: '#fffff0',\n    khaki: '#f0e68c',\n    lavenderblush: '#fff0f5',\n    lavender: '#e6e6fa',\n    lawngreen: '#7cfc00',\n    lemonchiffon: '#fffacd',\n    lightblue: '#add8e6',\n    lightcoral: '#f08080',\n    lightcyan: '#e0ffff',\n    lightgoldenrodyellow: '#fafad2',\n    lightgray: '#d3d3d3',\n    lightgreen: '#90ee90',\n    lightgrey: '#d3d3d3',\n    lightpink: '#ffb6c1',\n    lightsalmon: '#ffa07a',\n    lightseagreen: '#20b2aa',\n    lightskyblue: '#87cefa',\n    lightslategray: '#778899',\n    lightslategrey: '#778899',\n    lightsteelblue: '#b0c4de',\n    lightyellow: '#ffffe0',\n    lime: '#00ff00',\n    limegreen: '#32cd32',\n    linen: '#faf0e6',\n    magenta: '#ff00ff',\n    maroon: '#800000',\n    mediumaquamarine: '#66cdaa',\n    mediumblue: '#0000cd',\n    mediumorchid: '#ba55d3',\n    mediumpurple: '#9370db',\n    mediumseagreen: '#3cb371',\n    mediumslateblue: '#7b68ee',\n    mediumspringgreen: '#00fa9a',\n    mediumturquoise: '#48d1cc',\n    mediumvioletred: '#c71585',\n    midnightblue: '#191970',\n    mintcream: '#f5fffa',\n    mistyrose: '#ffe4e1',\n    moccasin: '#ffe4b5',\n    navajowhite: '#ffdead',\n    navy: '#000080',\n    oldlace: '#fdf5e6',\n    olive: '#808000',\n    olivedrab: '#6b8e23',\n    orange: '#ffa500',\n    orangered: '#ff4500',\n    orchid: '#da70d6',\n    palegoldenrod: '#eee8aa',\n    palegreen: '#98fb98',\n    paleturquoise: '#afeeee',\n    palevioletred: '#db7093',\n    papayawhip: '#ffefd5',\n    peachpuff: '#ffdab9',\n    peru: '#cd853f',\n    pink: '#ffc0cb',\n    plum: '#dda0dd',\n    powderblue: '#b0e0e6',\n    purple: '#800080',\n    rebeccapurple: '#663399',\n    red: '#ff0000',\n    rosybrown: '#bc8f8f',\n    royalblue: '#4169e1',\n    saddlebrown: '#8b4513',\n    salmon: '#fa8072',\n    sandybrown: '#f4a460',\n    seagreen: '#2e8b57',\n    seashell: '#fff5ee',\n    sienna: '#a0522d',\n    silver: '#c0c0c0',\n    skyblue: '#87ceeb',\n    slateblue: '#6a5acd',\n    slategray: '#708090',\n    slategrey: '#708090',\n    snow: '#fffafa',\n    springgreen: '#00ff7f',\n    steelblue: '#4682b4',\n    tan: '#d2b48c',\n    teal: '#008080',\n    thistle: '#d8bfd8',\n    tomato: '#ff6347',\n    turquoise: '#40e0d0',\n    violet: '#ee82ee',\n    wheat: '#f5deb3',\n    white: '#ffffff',\n    whitesmoke: '#f5f5f5',\n    yellow: '#ffff00',\n    yellowgreen: '#9acd32',\n};\n","import { convertHexToDecimal, hslToRgb, hsvToRgb, parseIntFromHex, rgbToRgb } from './conversion';\nimport { names } from './css-color-names';\nimport { boundAlpha, convertToPercentage } from './util';\n/**\n * Given a string or object, convert that input to RGB\n *\n * Possible string inputs:\n * ```\n * \"red\"\n * \"#f00\" or \"f00\"\n * \"#ff0000\" or \"ff0000\"\n * \"#ff000000\" or \"ff000000\"\n * \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\n * \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\n * \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\n * \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\n * \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\n * \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\n * \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\n * ```\n */\nexport function inputToRGB(color) {\n    var rgb = { r: 0, g: 0, b: 0 };\n    var a = 1;\n    var s = null;\n    var v = null;\n    var l = null;\n    var ok = false;\n    var format = false;\n    if (typeof color === 'string') {\n        color = stringInputToObject(color);\n    }\n    if (typeof color === 'object') {\n        if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {\n            rgb = rgbToRgb(color.r, color.g, color.b);\n            ok = true;\n            format = String(color.r).substr(-1) === '%' ? 'prgb' : 'rgb';\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {\n            s = convertToPercentage(color.s);\n            v = convertToPercentage(color.v);\n            rgb = hsvToRgb(color.h, s, v);\n            ok = true;\n            format = 'hsv';\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {\n            s = convertToPercentage(color.s);\n            l = convertToPercentage(color.l);\n            rgb = hslToRgb(color.h, s, l);\n            ok = true;\n            format = 'hsl';\n        }\n        if (Object.prototype.hasOwnProperty.call(color, 'a')) {\n            a = color.a;\n        }\n    }\n    a = boundAlpha(a);\n    return {\n        ok: ok,\n        format: color.format || format,\n        r: Math.min(255, Math.max(rgb.r, 0)),\n        g: Math.min(255, Math.max(rgb.g, 0)),\n        b: Math.min(255, Math.max(rgb.b, 0)),\n        a: a,\n    };\n}\n// <http://www.w3.org/TR/css3-values/#integers>\nvar CSS_INTEGER = '[-\\\\+]?\\\\d+%?';\n// <http://www.w3.org/TR/css3-values/#number-value>\nvar CSS_NUMBER = '[-\\\\+]?\\\\d*\\\\.\\\\d+%?';\n// Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\nvar CSS_UNIT = \"(?:\" + CSS_NUMBER + \")|(?:\" + CSS_INTEGER + \")\";\n// Actual matching.\n// Parentheses and commas are optional, but not required.\n// Whitespace can take the place of commas or opening paren\nvar PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\nvar PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\nvar matchers = {\n    CSS_UNIT: new RegExp(CSS_UNIT),\n    rgb: new RegExp('rgb' + PERMISSIVE_MATCH3),\n    rgba: new RegExp('rgba' + PERMISSIVE_MATCH4),\n    hsl: new RegExp('hsl' + PERMISSIVE_MATCH3),\n    hsla: new RegExp('hsla' + PERMISSIVE_MATCH4),\n    hsv: new RegExp('hsv' + PERMISSIVE_MATCH3),\n    hsva: new RegExp('hsva' + PERMISSIVE_MATCH4),\n    hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n    hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n    hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n    hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n};\n/**\n * Permissive string parsing.  Take in a number of formats, and output an object\n * based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\n */\nexport function stringInputToObject(color) {\n    color = color.trim().toLowerCase();\n    if (color.length === 0) {\n        return false;\n    }\n    var named = false;\n    if (names[color]) {\n        color = names[color];\n        named = true;\n    }\n    else if (color === 'transparent') {\n        return { r: 0, g: 0, b: 0, a: 0, format: 'name' };\n    }\n    // Try to match string input using regular expressions.\n    // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\n    // Just return an object and let the conversion functions handle that.\n    // This way the result will be the same whether the tinycolor is initialized with string or object.\n    var match = matchers.rgb.exec(color);\n    if (match) {\n        return { r: match[1], g: match[2], b: match[3] };\n    }\n    match = matchers.rgba.exec(color);\n    if (match) {\n        return { r: match[1], g: match[2], b: match[3], a: match[4] };\n    }\n    match = matchers.hsl.exec(color);\n    if (match) {\n        return { h: match[1], s: match[2], l: match[3] };\n    }\n    match = matchers.hsla.exec(color);\n    if (match) {\n        return { h: match[1], s: match[2], l: match[3], a: match[4] };\n    }\n    match = matchers.hsv.exec(color);\n    if (match) {\n        return { h: match[1], s: match[2], v: match[3] };\n    }\n    match = matchers.hsva.exec(color);\n    if (match) {\n        return { h: match[1], s: match[2], v: match[3], a: match[4] };\n    }\n    match = matchers.hex8.exec(color);\n    if (match) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            a: convertHexToDecimal(match[4]),\n            format: named ? 'name' : 'hex8',\n        };\n    }\n    match = matchers.hex6.exec(color);\n    if (match) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            format: named ? 'name' : 'hex',\n        };\n    }\n    match = matchers.hex4.exec(color);\n    if (match) {\n        return {\n            r: parseIntFromHex(match[1] + match[1]),\n            g: parseIntFromHex(match[2] + match[2]),\n            b: parseIntFromHex(match[3] + match[3]),\n            a: convertHexToDecimal(match[4] + match[4]),\n            format: named ? 'name' : 'hex8',\n        };\n    }\n    match = matchers.hex3.exec(color);\n    if (match) {\n        return {\n            r: parseIntFromHex(match[1] + match[1]),\n            g: parseIntFromHex(match[2] + match[2]),\n            b: parseIntFromHex(match[3] + match[3]),\n            format: named ? 'name' : 'hex',\n        };\n    }\n    return false;\n}\n/**\n * Check to see if it looks like a CSS unit\n * (see `matchers` above for definition).\n */\nexport function isValidCSSUnit(color) {\n    return Boolean(matchers.CSS_UNIT.exec(String(color)));\n}\n","import { rgbaToHex, rgbToHex, rgbToHsl, rgbToHsv, numberInputToObject } from './conversion';\nimport { names } from './css-color-names';\nimport { inputToRGB } from './format-input';\nimport { bound01, boundAlpha, clamp01 } from './util';\nvar TinyColor = /** @class */ (function () {\n    function TinyColor(color, opts) {\n        if (color === void 0) { color = ''; }\n        if (opts === void 0) { opts = {}; }\n        var _a;\n        // If input is already a tinycolor, return itself\n        if (color instanceof TinyColor) {\n            // eslint-disable-next-line no-constructor-return\n            return color;\n        }\n        if (typeof color === 'number') {\n            color = numberInputToObject(color);\n        }\n        this.originalInput = color;\n        var rgb = inputToRGB(color);\n        this.originalInput = color;\n        this.r = rgb.r;\n        this.g = rgb.g;\n        this.b = rgb.b;\n        this.a = rgb.a;\n        this.roundA = Math.round(100 * this.a) / 100;\n        this.format = (_a = opts.format) !== null && _a !== void 0 ? _a : rgb.format;\n        this.gradientType = opts.gradientType;\n        // Don't let the range of [0,255] come back in [0,1].\n        // Potentially lose a little bit of precision here, but will fix issues where\n        // .5 gets interpreted as half of the total, instead of half of 1\n        // If it was supposed to be 128, this was already taken care of by `inputToRgb`\n        if (this.r < 1) {\n            this.r = Math.round(this.r);\n        }\n        if (this.g < 1) {\n            this.g = Math.round(this.g);\n        }\n        if (this.b < 1) {\n            this.b = Math.round(this.b);\n        }\n        this.isValid = rgb.ok;\n    }\n    TinyColor.prototype.isDark = function () {\n        return this.getBrightness() < 128;\n    };\n    TinyColor.prototype.isLight = function () {\n        return !this.isDark();\n    };\n    /**\n     * Returns the perceived brightness of the color, from 0-255.\n     */\n    TinyColor.prototype.getBrightness = function () {\n        // http://www.w3.org/TR/AERT#color-contrast\n        var rgb = this.toRgb();\n        return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\n    };\n    /**\n     * Returns the perceived luminance of a color, from 0-1.\n     */\n    TinyColor.prototype.getLuminance = function () {\n        // http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n        var rgb = this.toRgb();\n        var R;\n        var G;\n        var B;\n        var RsRGB = rgb.r / 255;\n        var GsRGB = rgb.g / 255;\n        var BsRGB = rgb.b / 255;\n        if (RsRGB <= 0.03928) {\n            R = RsRGB / 12.92;\n        }\n        else {\n            // eslint-disable-next-line prefer-exponentiation-operator\n            R = Math.pow((RsRGB + 0.055) / 1.055, 2.4);\n        }\n        if (GsRGB <= 0.03928) {\n            G = GsRGB / 12.92;\n        }\n        else {\n            // eslint-disable-next-line prefer-exponentiation-operator\n            G = Math.pow((GsRGB + 0.055) / 1.055, 2.4);\n        }\n        if (BsRGB <= 0.03928) {\n            B = BsRGB / 12.92;\n        }\n        else {\n            // eslint-disable-next-line prefer-exponentiation-operator\n            B = Math.pow((BsRGB + 0.055) / 1.055, 2.4);\n        }\n        return 0.2126 * R + 0.7152 * G + 0.0722 * B;\n    };\n    /**\n     * Returns the alpha value of a color, from 0-1.\n     */\n    TinyColor.prototype.getAlpha = function () {\n        return this.a;\n    };\n    /**\n     * Sets the alpha value on the current color.\n     *\n     * @param alpha - The new alpha value. The accepted range is 0-1.\n     */\n    TinyColor.prototype.setAlpha = function (alpha) {\n        this.a = boundAlpha(alpha);\n        this.roundA = Math.round(100 * this.a) / 100;\n        return this;\n    };\n    /**\n     * Returns the object as a HSVA object.\n     */\n    TinyColor.prototype.toHsv = function () {\n        var hsv = rgbToHsv(this.r, this.g, this.b);\n        return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this.a };\n    };\n    /**\n     * Returns the hsva values interpolated into a string with the following format:\n     * \"hsva(xxx, xxx, xxx, xx)\".\n     */\n    TinyColor.prototype.toHsvString = function () {\n        var hsv = rgbToHsv(this.r, this.g, this.b);\n        var h = Math.round(hsv.h * 360);\n        var s = Math.round(hsv.s * 100);\n        var v = Math.round(hsv.v * 100);\n        return this.a === 1 ? \"hsv(\" + h + \", \" + s + \"%, \" + v + \"%)\" : \"hsva(\" + h + \", \" + s + \"%, \" + v + \"%, \" + this.roundA + \")\";\n    };\n    /**\n     * Returns the object as a HSLA object.\n     */\n    TinyColor.prototype.toHsl = function () {\n        var hsl = rgbToHsl(this.r, this.g, this.b);\n        return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this.a };\n    };\n    /**\n     * Returns the hsla values interpolated into a string with the following format:\n     * \"hsla(xxx, xxx, xxx, xx)\".\n     */\n    TinyColor.prototype.toHslString = function () {\n        var hsl = rgbToHsl(this.r, this.g, this.b);\n        var h = Math.round(hsl.h * 360);\n        var s = Math.round(hsl.s * 100);\n        var l = Math.round(hsl.l * 100);\n        return this.a === 1 ? \"hsl(\" + h + \", \" + s + \"%, \" + l + \"%)\" : \"hsla(\" + h + \", \" + s + \"%, \" + l + \"%, \" + this.roundA + \")\";\n    };\n    /**\n     * Returns the hex value of the color.\n     * @param allow3Char will shorten hex value to 3 char if possible\n     */\n    TinyColor.prototype.toHex = function (allow3Char) {\n        if (allow3Char === void 0) { allow3Char = false; }\n        return rgbToHex(this.r, this.g, this.b, allow3Char);\n    };\n    /**\n     * Returns the hex value of the color -with a # appened.\n     * @param allow3Char will shorten hex value to 3 char if possible\n     */\n    TinyColor.prototype.toHexString = function (allow3Char) {\n        if (allow3Char === void 0) { allow3Char = false; }\n        return '#' + this.toHex(allow3Char);\n    };\n    /**\n     * Returns the hex 8 value of the color.\n     * @param allow4Char will shorten hex value to 4 char if possible\n     */\n    TinyColor.prototype.toHex8 = function (allow4Char) {\n        if (allow4Char === void 0) { allow4Char = false; }\n        return rgbaToHex(this.r, this.g, this.b, this.a, allow4Char);\n    };\n    /**\n     * Returns the hex 8 value of the color -with a # appened.\n     * @param allow4Char will shorten hex value to 4 char if possible\n     */\n    TinyColor.prototype.toHex8String = function (allow4Char) {\n        if (allow4Char === void 0) { allow4Char = false; }\n        return '#' + this.toHex8(allow4Char);\n    };\n    /**\n     * Returns the object as a RGBA object.\n     */\n    TinyColor.prototype.toRgb = function () {\n        return {\n            r: Math.round(this.r),\n            g: Math.round(this.g),\n            b: Math.round(this.b),\n            a: this.a,\n        };\n    };\n    /**\n     * Returns the RGBA values interpolated into a string with the following format:\n     * \"RGBA(xxx, xxx, xxx, xx)\".\n     */\n    TinyColor.prototype.toRgbString = function () {\n        var r = Math.round(this.r);\n        var g = Math.round(this.g);\n        var b = Math.round(this.b);\n        return this.a === 1 ? \"rgb(\" + r + \", \" + g + \", \" + b + \")\" : \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + this.roundA + \")\";\n    };\n    /**\n     * Returns the object as a RGBA object.\n     */\n    TinyColor.prototype.toPercentageRgb = function () {\n        var fmt = function (x) { return Math.round(bound01(x, 255) * 100) + \"%\"; };\n        return {\n            r: fmt(this.r),\n            g: fmt(this.g),\n            b: fmt(this.b),\n            a: this.a,\n        };\n    };\n    /**\n     * Returns the RGBA relative values interpolated into a string\n     */\n    TinyColor.prototype.toPercentageRgbString = function () {\n        var rnd = function (x) { return Math.round(bound01(x, 255) * 100); };\n        return this.a === 1\n            ? \"rgb(\" + rnd(this.r) + \"%, \" + rnd(this.g) + \"%, \" + rnd(this.b) + \"%)\"\n            : \"rgba(\" + rnd(this.r) + \"%, \" + rnd(this.g) + \"%, \" + rnd(this.b) + \"%, \" + this.roundA + \")\";\n    };\n    /**\n     * The 'real' name of the color -if there is one.\n     */\n    TinyColor.prototype.toName = function () {\n        if (this.a === 0) {\n            return 'transparent';\n        }\n        if (this.a < 1) {\n            return false;\n        }\n        var hex = '#' + rgbToHex(this.r, this.g, this.b, false);\n        for (var _i = 0, _a = Object.entries(names); _i < _a.length; _i++) {\n            var _b = _a[_i], key = _b[0], value = _b[1];\n            if (hex === value) {\n                return key;\n            }\n        }\n        return false;\n    };\n    TinyColor.prototype.toString = function (format) {\n        var formatSet = Boolean(format);\n        format = format !== null && format !== void 0 ? format : this.format;\n        var formattedString = false;\n        var hasAlpha = this.a < 1 && this.a >= 0;\n        var needsAlphaFormat = !formatSet && hasAlpha && (format.startsWith('hex') || format === 'name');\n        if (needsAlphaFormat) {\n            // Special case for \"transparent\", all other non-alpha formats\n            // will return rgba when there is transparency.\n            if (format === 'name' && this.a === 0) {\n                return this.toName();\n            }\n            return this.toRgbString();\n        }\n        if (format === 'rgb') {\n            formattedString = this.toRgbString();\n        }\n        if (format === 'prgb') {\n            formattedString = this.toPercentageRgbString();\n        }\n        if (format === 'hex' || format === 'hex6') {\n            formattedString = this.toHexString();\n        }\n        if (format === 'hex3') {\n            formattedString = this.toHexString(true);\n        }\n        if (format === 'hex4') {\n            formattedString = this.toHex8String(true);\n        }\n        if (format === 'hex8') {\n            formattedString = this.toHex8String();\n        }\n        if (format === 'name') {\n            formattedString = this.toName();\n        }\n        if (format === 'hsl') {\n            formattedString = this.toHslString();\n        }\n        if (format === 'hsv') {\n            formattedString = this.toHsvString();\n        }\n        return formattedString || this.toHexString();\n    };\n    TinyColor.prototype.toNumber = function () {\n        return (Math.round(this.r) << 16) + (Math.round(this.g) << 8) + Math.round(this.b);\n    };\n    TinyColor.prototype.clone = function () {\n        return new TinyColor(this.toString());\n    };\n    /**\n     * Lighten the color a given amount. Providing 100 will always return white.\n     * @param amount - valid between 1-100\n     */\n    TinyColor.prototype.lighten = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        var hsl = this.toHsl();\n        hsl.l += amount / 100;\n        hsl.l = clamp01(hsl.l);\n        return new TinyColor(hsl);\n    };\n    /**\n     * Brighten the color a given amount, from 0 to 100.\n     * @param amount - valid between 1-100\n     */\n    TinyColor.prototype.brighten = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        var rgb = this.toRgb();\n        rgb.r = Math.max(0, Math.min(255, rgb.r - Math.round(255 * -(amount / 100))));\n        rgb.g = Math.max(0, Math.min(255, rgb.g - Math.round(255 * -(amount / 100))));\n        rgb.b = Math.max(0, Math.min(255, rgb.b - Math.round(255 * -(amount / 100))));\n        return new TinyColor(rgb);\n    };\n    /**\n     * Darken the color a given amount, from 0 to 100.\n     * Providing 100 will always return black.\n     * @param amount - valid between 1-100\n     */\n    TinyColor.prototype.darken = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        var hsl = this.toHsl();\n        hsl.l -= amount / 100;\n        hsl.l = clamp01(hsl.l);\n        return new TinyColor(hsl);\n    };\n    /**\n     * Mix the color with pure white, from 0 to 100.\n     * Providing 0 will do nothing, providing 100 will always return white.\n     * @param amount - valid between 1-100\n     */\n    TinyColor.prototype.tint = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        return this.mix('white', amount);\n    };\n    /**\n     * Mix the color with pure black, from 0 to 100.\n     * Providing 0 will do nothing, providing 100 will always return black.\n     * @param amount - valid between 1-100\n     */\n    TinyColor.prototype.shade = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        return this.mix('black', amount);\n    };\n    /**\n     * Desaturate the color a given amount, from 0 to 100.\n     * Providing 100 will is the same as calling greyscale\n     * @param amount - valid between 1-100\n     */\n    TinyColor.prototype.desaturate = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        var hsl = this.toHsl();\n        hsl.s -= amount / 100;\n        hsl.s = clamp01(hsl.s);\n        return new TinyColor(hsl);\n    };\n    /**\n     * Saturate the color a given amount, from 0 to 100.\n     * @param amount - valid between 1-100\n     */\n    TinyColor.prototype.saturate = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        var hsl = this.toHsl();\n        hsl.s += amount / 100;\n        hsl.s = clamp01(hsl.s);\n        return new TinyColor(hsl);\n    };\n    /**\n     * Completely desaturates a color into greyscale.\n     * Same as calling `desaturate(100)`\n     */\n    TinyColor.prototype.greyscale = function () {\n        return this.desaturate(100);\n    };\n    /**\n     * Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\n     * Values outside of this range will be wrapped into this range.\n     */\n    TinyColor.prototype.spin = function (amount) {\n        var hsl = this.toHsl();\n        var hue = (hsl.h + amount) % 360;\n        hsl.h = hue < 0 ? 360 + hue : hue;\n        return new TinyColor(hsl);\n    };\n    /**\n     * Mix the current color a given amount with another color, from 0 to 100.\n     * 0 means no mixing (return current color).\n     */\n    TinyColor.prototype.mix = function (color, amount) {\n        if (amount === void 0) { amount = 50; }\n        var rgb1 = this.toRgb();\n        var rgb2 = new TinyColor(color).toRgb();\n        var p = amount / 100;\n        var rgba = {\n            r: (rgb2.r - rgb1.r) * p + rgb1.r,\n            g: (rgb2.g - rgb1.g) * p + rgb1.g,\n            b: (rgb2.b - rgb1.b) * p + rgb1.b,\n            a: (rgb2.a - rgb1.a) * p + rgb1.a,\n        };\n        return new TinyColor(rgba);\n    };\n    TinyColor.prototype.analogous = function (results, slices) {\n        if (results === void 0) { results = 6; }\n        if (slices === void 0) { slices = 30; }\n        var hsl = this.toHsl();\n        var part = 360 / slices;\n        var ret = [this];\n        for (hsl.h = (hsl.h - ((part * results) >> 1) + 720) % 360; --results;) {\n            hsl.h = (hsl.h + part) % 360;\n            ret.push(new TinyColor(hsl));\n        }\n        return ret;\n    };\n    /**\n     * taken from https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js\n     */\n    TinyColor.prototype.complement = function () {\n        var hsl = this.toHsl();\n        hsl.h = (hsl.h + 180) % 360;\n        return new TinyColor(hsl);\n    };\n    TinyColor.prototype.monochromatic = function (results) {\n        if (results === void 0) { results = 6; }\n        var hsv = this.toHsv();\n        var h = hsv.h;\n        var s = hsv.s;\n        var v = hsv.v;\n        var res = [];\n        var modification = 1 / results;\n        while (results--) {\n            res.push(new TinyColor({ h: h, s: s, v: v }));\n            v = (v + modification) % 1;\n        }\n        return res;\n    };\n    TinyColor.prototype.splitcomplement = function () {\n        var hsl = this.toHsl();\n        var h = hsl.h;\n        return [\n            this,\n            new TinyColor({ h: (h + 72) % 360, s: hsl.s, l: hsl.l }),\n            new TinyColor({ h: (h + 216) % 360, s: hsl.s, l: hsl.l }),\n        ];\n    };\n    /**\n     * Compute how the color would appear on a background\n     */\n    TinyColor.prototype.onBackground = function (background) {\n        var fg = this.toRgb();\n        var bg = new TinyColor(background).toRgb();\n        return new TinyColor({\n            r: bg.r + (fg.r - bg.r) * fg.a,\n            g: bg.g + (fg.g - bg.g) * fg.a,\n            b: bg.b + (fg.b - bg.b) * fg.a,\n        });\n    };\n    /**\n     * Alias for `polyad(3)`\n     */\n    TinyColor.prototype.triad = function () {\n        return this.polyad(3);\n    };\n    /**\n     * Alias for `polyad(4)`\n     */\n    TinyColor.prototype.tetrad = function () {\n        return this.polyad(4);\n    };\n    /**\n     * Get polyad colors, like (for 1, 2, 3, 4, 5, 6, 7, 8, etc...)\n     * monad, dyad, triad, tetrad, pentad, hexad, heptad, octad, etc...\n     */\n    TinyColor.prototype.polyad = function (n) {\n        var hsl = this.toHsl();\n        var h = hsl.h;\n        var result = [this];\n        var increment = 360 / n;\n        for (var i = 1; i < n; i++) {\n            result.push(new TinyColor({ h: (h + i * increment) % 360, s: hsl.s, l: hsl.l }));\n        }\n        return result;\n    };\n    /**\n     * compare color vs current color\n     */\n    TinyColor.prototype.equals = function (color) {\n        return this.toRgbString() === new TinyColor(color).toRgbString();\n    };\n    return TinyColor;\n}());\nexport { TinyColor };\n// kept for backwards compatability with v1\nexport function tinycolor(color, opts) {\n    if (color === void 0) { color = ''; }\n    if (opts === void 0) { opts = {}; }\n    return new TinyColor(color, opts);\n}\n","import { TinyColor } from '@ctrl/tinycolor';\n\nvar hueStep = 2; // 色相阶梯\n\nvar saturationStep = 0.16; // 饱和度阶梯，浅色部分\n\nvar saturationStep2 = 0.05; // 饱和度阶梯，深色部分\n\nvar brightnessStep1 = 0.05; // 亮度阶梯，浅色部分\n\nvar brightnessStep2 = 0.15; // 亮度阶梯，深色部分\n\nvar lightColorCount = 5; // 浅色数量，主色上\n\nvar darkColorCount = 4; // 深色数量，主色下\n// 暗色主题颜色映射关系表\n\nvar darkColorMap = [{\n  index: 7,\n  opacity: 0.15\n}, {\n  index: 6,\n  opacity: 0.25\n}, {\n  index: 5,\n  opacity: 0.3\n}, {\n  index: 5,\n  opacity: 0.45\n}, {\n  index: 5,\n  opacity: 0.65\n}, {\n  index: 5,\n  opacity: 0.85\n}, {\n  index: 4,\n  opacity: 0.9\n}, {\n  index: 3,\n  opacity: 0.95\n}, {\n  index: 2,\n  opacity: 0.97\n}, {\n  index: 1,\n  opacity: 0.98\n}];\n\nfunction getHue(hsv, i, light) {\n  var hue; // 根据色相不同，色相转向不同\n\n  if (Math.round(hsv.h) >= 60 && Math.round(hsv.h) <= 240) {\n    hue = light ? Math.round(hsv.h) - hueStep * i : Math.round(hsv.h) + hueStep * i;\n  } else {\n    hue = light ? Math.round(hsv.h) + hueStep * i : Math.round(hsv.h) - hueStep * i;\n  }\n\n  if (hue < 0) {\n    hue += 360;\n  } else if (hue >= 360) {\n    hue -= 360;\n  }\n\n  return hue;\n}\n\nfunction getSaturation(hsv, i, light) {\n  // grey color don't change saturation\n  if (hsv.h === 0 && hsv.s === 0) {\n    return hsv.s;\n  }\n\n  var saturation;\n\n  if (light) {\n    saturation = hsv.s - saturationStep * i;\n  } else if (i === darkColorCount) {\n    saturation = hsv.s + saturationStep;\n  } else {\n    saturation = hsv.s + saturationStep2 * i;\n  } // 边界值修正\n\n\n  if (saturation > 1) {\n    saturation = 1;\n  } // 第一格的 s 限制在 0.06-0.1 之间\n\n\n  if (light && i === lightColorCount && saturation > 0.1) {\n    saturation = 0.1;\n  }\n\n  if (saturation < 0.06) {\n    saturation = 0.06;\n  }\n\n  return Number(saturation.toFixed(2));\n}\n\nfunction getValue(hsv, i, light) {\n  var value;\n\n  if (light) {\n    value = hsv.v + brightnessStep1 * i;\n  } else {\n    value = hsv.v - brightnessStep2 * i;\n  }\n\n  if (value > 1) {\n    value = 1;\n  }\n\n  return Number(value.toFixed(2));\n}\n\nfunction generate(color) {\n  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var patterns = [];\n  var pColor = new TinyColor(color);\n\n  for (var i = lightColorCount; i > 0; i -= 1) {\n    var hsv = pColor.toHsv();\n    var colorString = new TinyColor({\n      h: getHue(hsv, i, true),\n      s: getSaturation(hsv, i, true),\n      v: getValue(hsv, i, true)\n    }).toHexString();\n    patterns.push(colorString);\n  }\n\n  patterns.push(pColor.toHexString());\n\n  for (var _i = 1; _i <= darkColorCount; _i += 1) {\n    var _hsv = pColor.toHsv();\n\n    var _colorString = new TinyColor({\n      h: getHue(_hsv, _i),\n      s: getSaturation(_hsv, _i),\n      v: getValue(_hsv, _i)\n    }).toHexString();\n\n    patterns.push(_colorString);\n  } // dark theme patterns\n\n\n  if (opts.theme === 'dark') {\n    return darkColorMap.map(function (_ref) {\n      var index = _ref.index,\n          opacity = _ref.opacity;\n      var darkColorString = new TinyColor(opts.backgroundColor || '#141414').mix(patterns[index], opacity * 100).toHexString();\n      return darkColorString;\n    });\n  }\n\n  return patterns;\n}\n\nvar presetPrimaryColors = {\n  red: '#F5222D',\n  volcano: '#FA541C',\n  orange: '#FA8C16',\n  gold: '#FAAD14',\n  yellow: '#FADB14',\n  lime: '#A0D911',\n  green: '#52C41A',\n  cyan: '#13C2C2',\n  blue: '#1890FF',\n  geekblue: '#2F54EB',\n  purple: '#722ED1',\n  magenta: '#EB2F96',\n  grey: '#666666'\n};\nvar presetPalettes = {};\nvar presetDarkPalettes = {};\nObject.keys(presetPrimaryColors).forEach(function (key) {\n  presetPalettes[key] = generate(presetPrimaryColors[key]);\n  presetPalettes[key].primary = presetPalettes[key][5]; // dark presetPalettes\n\n  presetDarkPalettes[key] = generate(presetPrimaryColors[key], {\n    theme: 'dark',\n    backgroundColor: '#141414'\n  });\n  presetDarkPalettes[key].primary = presetDarkPalettes[key][5];\n});\nvar red = presetPalettes.red;\nvar volcano = presetPalettes.volcano;\nvar gold = presetPalettes.gold;\nvar orange = presetPalettes.orange;\nvar yellow = presetPalettes.yellow;\nvar lime = presetPalettes.lime;\nvar green = presetPalettes.green;\nvar cyan = presetPalettes.cyan;\nvar blue = presetPalettes.blue;\nvar geekblue = presetPalettes.geekblue;\nvar purple = presetPalettes.purple;\nvar magenta = presetPalettes.magenta;\nvar grey = presetPalettes.grey;\n\nexport { blue, cyan, geekblue, generate, gold, green, grey, lime, magenta, orange, presetDarkPalettes, presetPalettes, presetPrimaryColors, purple, red, volcano, yellow };\n","// https://github.com/substack/insert-css\nvar containers = []; // will store container HTMLElement references\n\nvar styleElements = []; // will store {prepend: HTMLElement, append: HTMLElement}\n\nvar usage = 'insert-css: You need to provide a CSS string. Usage: insertCss(cssString[, options]).';\n\nfunction createStyleElement() {\n  var styleElement = document.createElement('style');\n  styleElement.setAttribute('type', 'text/css');\n  return styleElement;\n} // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n\n\nfunction insertCss(css, options) {\n  options = options || {};\n\n  if (css === undefined) {\n    throw new Error(usage);\n  }\n\n  var position = options.prepend === true ? 'prepend' : 'append';\n  var container = options.container !== undefined ? options.container : document.querySelector('head');\n  var containerId = containers.indexOf(container); // first time we see this container, create the necessary entries\n\n  if (containerId === -1) {\n    containerId = containers.push(container) - 1;\n    styleElements[containerId] = {};\n  } // try to get the correponding container + position styleElement, create it otherwise\n\n\n  var styleElement;\n\n  if (styleElements[containerId] !== undefined && styleElements[containerId][position] !== undefined) {\n    styleElement = styleElements[containerId][position];\n  } else {\n    styleElement = styleElements[containerId][position] = createStyleElement();\n\n    if (position === 'prepend') {\n      container.insertBefore(styleElement, container.childNodes[0]);\n    } else {\n      container.appendChild(styleElement);\n    }\n  } // strip potential UTF-8 BOM if css was read from a file\n\n\n  if (css.charCodeAt(0) === 0xfeff) {\n    css = css.substr(1, css.length);\n  } // actually add the stylesheet\n\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText += css;\n  } else {\n    styleElement.textContent += css;\n  }\n\n  return styleElement;\n}\n\nexport default insertCss;","function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? Object(arguments[i]) : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { nextTick, h } from 'vue';\nimport { generate as generateColor } from '@ant-design/colors';\nimport insertCss from './insert-css';\nexport function warn(valid, message) {\n  // Support uglify\n  if (process.env.NODE_ENV !== 'production' && !valid && console !== undefined) {\n    console.error(\"Warning: \".concat(message));\n  }\n}\nexport function warning(valid, message) {\n  warn(valid, \"[@ant-design/icons-vue] \".concat(message));\n} // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n\nexport function isIconDefinition(target) {\n  return typeof target === 'object' && typeof target.name === 'string' && typeof target.theme === 'string' && (typeof target.icon === 'object' || typeof target.icon === 'function');\n}\nexport function normalizeAttrs() {\n  var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return Object.keys(attrs).reduce(function (acc, key) {\n    var val = attrs[key];\n\n    switch (key) {\n      case 'class':\n        acc.className = val;\n        delete acc[\"class\"];\n        break;\n\n      default:\n        acc[key] = val;\n    }\n\n    return acc;\n  }, {});\n}\nexport function generate(node, key, rootProps) {\n  if (!rootProps) {\n    return h(node.tag, _objectSpread({\n      key: key\n    }, node.attrs), (node.children || []).map(function (child, index) {\n      return generate(child, \"\".concat(key, \"-\").concat(node.tag, \"-\").concat(index));\n    }));\n  }\n\n  return h(node.tag, _objectSpread({\n    key: key\n  }, rootProps, node.attrs), (node.children || []).map(function (child, index) {\n    return generate(child, \"\".concat(key, \"-\").concat(node.tag, \"-\").concat(index));\n  }));\n}\nexport function getSecondaryColor(primaryColor) {\n  // choose the second color\n  return generateColor(primaryColor)[0];\n}\nexport function normalizeTwoToneColors(twoToneColor) {\n  if (!twoToneColor) {\n    return [];\n  }\n\n  return Array.isArray(twoToneColor) ? twoToneColor : [twoToneColor];\n} // These props make sure that the SVG behaviours like general text.\n// Reference: https://blog.prototypr.io/align-svg-icons-to-text-and-say-goodbye-to-font-icons-d44b3d7b26b4\n\nexport var svgBaseProps = {\n  width: '1em',\n  height: '1em',\n  fill: 'currentColor',\n  'aria-hidden': 'true',\n  focusable: 'false'\n};\nexport var iconStyles = \"\\n.anticon {\\n  display: inline-block;\\n  color: inherit;\\n  font-style: normal;\\n  line-height: 0;\\n  text-align: center;\\n  text-transform: none;\\n  vertical-align: -0.125em;\\n  text-rendering: optimizeLegibility;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n}\\n\\n.anticon > * {\\n  line-height: 1;\\n}\\n\\n.anticon svg {\\n  display: inline-block;\\n}\\n\\n.anticon::before {\\n  display: none;\\n}\\n\\n.anticon .anticon-icon {\\n  display: block;\\n}\\n\\n.anticon[tabindex] {\\n  cursor: pointer;\\n}\\n\\n.anticon-spin::before,\\n.anticon-spin {\\n  display: inline-block;\\n  -webkit-animation: loadingCircle 1s infinite linear;\\n  animation: loadingCircle 1s infinite linear;\\n}\\n\\n@-webkit-keyframes loadingCircle {\\n  100% {\\n    -webkit-transform: rotate(360deg);\\n    transform: rotate(360deg);\\n  }\\n}\\n\\n@keyframes loadingCircle {\\n  100% {\\n    -webkit-transform: rotate(360deg);\\n    transform: rotate(360deg);\\n  }\\n}\\n\";\nvar cssInjectedFlag = false;\nexport var useInsertStyles = function useInsertStyles() {\n  var styleStr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : iconStyles;\n  nextTick(function () {\n    if (!cssInjectedFlag) {\n      if (typeof window !== 'undefined' && window.document && window.document.documentElement) {\n        insertCss(styleStr, {\n          prepend: true\n        });\n      }\n\n      cssInjectedFlag = true;\n    }\n  });\n};","function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? Object(arguments[i]) : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { generate, getSecondaryColor, isIconDefinition, warning, useInsertStyles } from '../utils';\nvar twoToneColorPalette = {\n  primaryColor: '#333',\n  secondaryColor: '#E6E6E6',\n  calculated: false\n};\n\nfunction setTwoToneColors(_ref) {\n  var primaryColor = _ref.primaryColor,\n      secondaryColor = _ref.secondaryColor;\n  twoToneColorPalette.primaryColor = primaryColor;\n  twoToneColorPalette.secondaryColor = secondaryColor || getSecondaryColor(primaryColor);\n  twoToneColorPalette.calculated = !!secondaryColor;\n}\n\nfunction getTwoToneColors() {\n  return _objectSpread({}, twoToneColorPalette);\n}\n\nvar IconBase = function IconBase(props, context) {\n  var _props$context$attrs = _objectSpread({}, props, context.attrs),\n      icon = _props$context$attrs.icon,\n      primaryColor = _props$context$attrs.primaryColor,\n      secondaryColor = _props$context$attrs.secondaryColor,\n      restProps = _objectWithoutProperties(_props$context$attrs, [\"icon\", \"primaryColor\", \"secondaryColor\"]);\n\n  var colors = twoToneColorPalette;\n\n  if (primaryColor) {\n    colors = {\n      primaryColor: primaryColor,\n      secondaryColor: secondaryColor || getSecondaryColor(primaryColor)\n    };\n  }\n\n  useInsertStyles();\n  warning(isIconDefinition(icon), \"icon should be icon definiton, but got \".concat(icon));\n\n  if (!isIconDefinition(icon)) {\n    return null;\n  }\n\n  var target = icon;\n\n  if (target && typeof target.icon === 'function') {\n    target = _objectSpread({}, target, {\n      icon: target.icon(colors.primaryColor, colors.secondaryColor)\n    });\n  }\n\n  return generate(target.icon, \"svg-\".concat(target.name), _objectSpread({}, restProps, {\n    'data-icon': target.name,\n    width: '1em',\n    height: '1em',\n    fill: 'currentColor',\n    'aria-hidden': 'true'\n  })); // },\n};\n\nIconBase.props = {\n  icon: Object,\n  primaryColor: String,\n  secondaryColor: String,\n  focusable: String\n};\nIconBase.inheritAttrs = false;\nIconBase.displayName = 'IconBase';\nIconBase.getTwoToneColors = getTwoToneColors;\nIconBase.setTwoToneColors = setTwoToneColors;\nexport default IconBase;","function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport VueIcon from './IconBase';\nimport { normalizeTwoToneColors } from '../utils';\nexport function setTwoToneColor(twoToneColor) {\n  var _normalizeTwoToneColo = normalizeTwoToneColors(twoToneColor),\n      _normalizeTwoToneColo2 = _slicedToArray(_normalizeTwoToneColo, 2),\n      primaryColor = _normalizeTwoToneColo2[0],\n      secondaryColor = _normalizeTwoToneColo2[1];\n\n  return VueIcon.setTwoToneColors({\n    primaryColor: primaryColor,\n    secondaryColor: secondaryColor\n  });\n}\nexport function getTwoToneColor() {\n  var colors = VueIcon.getTwoToneColors();\n\n  if (!colors.calculated) {\n    return colors.primaryColor;\n  }\n\n  return [colors.primaryColor, colors.secondaryColor];\n}","import * as _vue from \"vue\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? Object(arguments[i]) : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport VueIcon from './IconBase';\nimport { getTwoToneColor, setTwoToneColor } from './twoTonePrimaryColor';\nimport { normalizeTwoToneColors } from '../utils'; // Initial setting\n\nsetTwoToneColor('#1890ff');\n\nvar Icon = function Icon(props, context) {\n  var _classObj;\n\n  var _props$context$attrs = _objectSpread({}, props, context.attrs),\n      cls = _props$context$attrs[\"class\"],\n      icon = _props$context$attrs.icon,\n      spin = _props$context$attrs.spin,\n      rotate = _props$context$attrs.rotate,\n      tabindex = _props$context$attrs.tabindex,\n      twoToneColor = _props$context$attrs.twoToneColor,\n      onClick = _props$context$attrs.onClick,\n      restProps = _objectWithoutProperties(_props$context$attrs, [\"class\", \"icon\", \"spin\", \"rotate\", \"tabindex\", \"twoToneColor\", \"onClick\"]);\n\n  var classObj = (_classObj = {\n    anticon: true\n  }, _defineProperty(_classObj, \"anticon-\".concat(icon.name), Boolean(icon.name)), _defineProperty(_classObj, cls, cls), _classObj);\n  var svgClassString = spin === '' || !!spin || icon.name === 'loading' ? 'anticon-spin' : '';\n  var iconTabIndex = tabindex;\n\n  if (iconTabIndex === undefined && onClick) {\n    iconTabIndex = -1;\n    restProps.tabindex = iconTabIndex;\n  }\n\n  var svgStyle = rotate ? {\n    msTransform: \"rotate(\".concat(rotate, \"deg)\"),\n    transform: \"rotate(\".concat(rotate, \"deg)\")\n  } : undefined;\n\n  var _normalizeTwoToneColo = normalizeTwoToneColors(twoToneColor),\n      _normalizeTwoToneColo2 = _slicedToArray(_normalizeTwoToneColo, 2),\n      primaryColor = _normalizeTwoToneColo2[0],\n      secondaryColor = _normalizeTwoToneColo2[1];\n\n  return _vue.createVNode(\"span\", _vue.mergeProps(restProps, {\n    \"role\": \"img\",\n    \"aria-label\": icon.name,\n    \"onClick\": onClick,\n    \"class\": classObj\n  }), [_vue.createVNode(VueIcon, {\n    \"class\": svgClassString,\n    \"icon\": icon,\n    \"primaryColor\": primaryColor,\n    \"secondaryColor\": secondaryColor,\n    \"style\": svgStyle\n  }, null)]);\n};\n\nIcon.props = {\n  spin: Boolean,\n  rotate: Number,\n  icon: Object,\n  twoToneColor: String\n};\nIcon.displayName = 'AntdIcon';\nIcon.inheritAttrs = false;\nIcon.getTwoToneColor = getTwoToneColor;\nIcon.setTwoToneColor = setTwoToneColor;\nexport default Icon;"],"names":["n","max","indexOf","parseFloat","isOnePointZero","isPercent","isPercentage","Math","min","parseInt","String","abs","val","a","isNaN","Number","c","length","r","g","b","bound01","h2","s","l","d","h","p","q","t","v","allow3Char","hex","pad2","round","toString","startsWith","charAt","join","parseIntFromHex","names","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","goldenrod","gold","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavenderblush","lavender","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color","rgb","ok","format","trim","toLowerCase","named","match","matchers","exec","rgba","hsl","hsla","hsv","hsva","hex8","convertHexToDecimal","hex6","hex4","hex3","stringInputToObject","isValidCSSUnit","substr","convertToPercentage","i","floor","f","mod","hsvToRgb","hue2rgb","hslToRgb","Object","prototype","hasOwnProperty","call","boundAlpha","CSS_UNIT","PERMISSIVE_MATCH3","PERMISSIVE_MATCH4","RegExp","Boolean","TinyColor","opts","_a","TinyColor2","numberInputToObject","originalInput","inputToRGB","roundA","this","gradientType","isValid","isDark","getBrightness","isLight","toRgb","getLuminance","RsRGB","GsRGB","BsRGB","pow","getAlpha","setAlpha","alpha","toHsv","rgbToHsv","toHsvString","toHsl","rgbToHsl","toHslString","toHex","rgbToHex","toHexString","toHex8","allow4Char","rgbaToHex","toHex8String","toRgbString","toPercentageRgb","fmt","x","toPercentageRgbString","rnd","toName","_i","entries","_b","key","formatSet","formattedString","hasAlpha","toNumber","clone","lighten","amount","clamp01","brighten","darken","tint","mix","shade","desaturate","saturate","greyscale","spin","hue","rgb1","rgb2","analogous","results","slices","part","ret","push","complement","monochromatic","res","modification","splitcomplement","onBackground","background","fg","bg","triad","polyad","tetrad","result","increment","equals","darkColorMap","index","opacity","light","saturation","toFixed","value","arguments","patterns","pColor","colorString","getHue","getSaturation","getValue","_hsv","_colorString","theme","map","_ref","backgroundColor","presetPrimaryColors","volcano","geekblue","presetPalettes","presetDarkPalettes","keys","forEach","generate","primary","containers","styleElements","css","options","Error","styleElement","position","prepend","container","document","querySelector","containerId","createElement","setAttribute","createStyleElement","insertBefore","childNodes","appendChild","charCodeAt","styleSheet","cssText","textContent","target","source","ownKeys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","obj","defineProperty","configurable","writable","name","icon","node","rootProps","tag","_objectSpread","attrs","children","child","primaryColor","generateColor","twoToneColor","Array","isArray","iconStyles","cssInjectedFlag","excluded","sourceKeys","_objectWithoutPropertiesLoose","sourceSymbolKeys","propertyIsEnumerable","twoToneColorPalette","secondaryColor","calculated","IconBase","props","context","_props$context$attrs","restProps","_objectWithoutProperties","colors","getSecondaryColor","styleStr","window","documentElement","isIconDefinition","width","height","fill","focusable","inheritAttrs","displayName","getTwoToneColors","setTwoToneColors","arr","_arrayWithHoles","Symbol","iterator","_arr","_n","_d","_e","_s","next","done","err","_iterableToArrayLimit","o","minLen","_arrayLikeToArray","slice","constructor","from","test","_unsupportedIterableToArray","TypeError","_nonIterableRest","len","arr2","_normalizeTwoToneColo2","_slicedToArray","normalizeTwoToneColors","VueIcon","setTwoToneColor","Icon","_classObj","cls","rotate","tabindex","onClick","classObj","_defineProperty","anticon","svgClassString","iconTabIndex","svgStyle","msTransform","transform","_vue.createVNode","_vue.mergeProps","role","class","style","getTwoToneColor"],"mappings":"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"}